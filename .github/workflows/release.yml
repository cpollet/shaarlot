name: Build release and deploy on prod

on:
  workflow_dispatch:
#  push:
#    branches:
#      - gh-actions

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-unknown-unknown
      - name: Install trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: 'latest'
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
        with:
          version: 'latest'
      - name: cache build
        uses: Swatinem/rust-cache@v2
      - name: Build release
        run: cargo make build-release
      - name: Save backend binary
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: target/release/backend
          retention-days: 1
          if-no-files-found: error
  build-docker:
    name: Create docker image
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch backend binary
        uses: actions/download-artifact@v3
        with:
          name: backend
          path: docker/target
      - name: Make backend executable
        run: chmod a+x docker/target/backend
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: cpollet/shaarlot
          tags: |
            type=raw,value=latest
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/Dockerfile.ubuntu-22.04
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    needs: build-docker
    steps:
      - name: Deploy on staging
        if: github.event_name != 'pull_request'
        run: |
          curl --silent "${{ secrets.DEPLOY_DEMO_HOOK }}"
          curl --silent "${{ secrets.DEPLOY_LIVE_HOOK }}"

# todo: build image from docker container directly...
# https://codingpackets.com/blog/rust-binary-and-docker-releases-using-github-actions/