//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "bookmark")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub url: String,
    pub description: Option<String>,
    pub title: Option<String>,
    pub creation_date: DateTimeWithTimeZone,
    pub update_date: Option<DateTimeWithTimeZone>,
    pub user_id: i32,
    pub private: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::tag::Entity> for Entity {
    fn to() -> RelationDef {
        super::bookmark_tag::Relation::Tag.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::bookmark_tag::Relation::Bookmark.def().rev())
    }
}

impl Related<super::account::Entity> for Entity {
    fn to() -> RelationDef {
        super::pin::Relation::Account.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::pin::Relation::Bookmark.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
