//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "account")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub username: String,
    pub password: String,
    pub creation_date: DateTimeWithTimeZone,
    pub email: Option<String>,
    pub email_token: Option<String>,
    pub email_token_generation_date: Option<DateTimeWithTimeZone>,
    pub new_email: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::password_recovery::Entity")]
    PasswordRecovery,
}

impl Related<super::password_recovery::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PasswordRecovery.def()
    }
}

impl Related<super::bookmark::Entity> for Entity {
    fn to() -> RelationDef {
        super::pin::Relation::Bookmark.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::pin::Relation::Account.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
